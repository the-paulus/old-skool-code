void ElementQuizView::initList(void)
{
	QString tmp;
	QString sep;
 	int pos = 0;
 	elements = 0;
 	fChem = new QFile("chem.key");
 	ts = new QTextStream(fChem);
 	
 	if(fChem->open(IO_ReadOnly))
	{
		while(!ts->eof())
		{
			elements++;
			tmp = ts->readLine();
			//fprintf(stdout, "QTextStream::readLine() = %s\n", (const char*)tmp);
			pos = tmp.find(':', 0, false);
			tmp.remove(0, pos+1);
			pos = tmp.find(':', 0, false);
			sep = tmp.left(pos);
			//fprintf(stdout, "tmp.left(%i) = %s\n", pos, (const char*)sep);
			list.append(sep);
			/*fprintf(stdout, "list element %i: %s\n", elements, list.at(elements));*/
		}
	}
	
}
/**  */
void ElementQuizView::Generate(void)
{
	QString tmp;
	QString sep;
	int pos = 0;
	int rnd = 0;
	
	rnd = 1 + (int)(rand()) % elements;
	
	if(fChem->open(IO_ReadOnly))
	{
		for(int i=0; i<rnd; i++)
		{
			tmp = ts->readLine();
			pos = tmp.find(':', 0, false);
			sep = tmp.left(pos);
			correct_number = sep.toInt();
			tmp.remove(0, pos+1);
			
			pos = tmp.find(':', 0, false);
			correct_name = tmp.left(pos);
			tmp.remove(0,pos+1);
			
			pos = tmp.find(':', 0, false);
			correct_symbol = tmp.left(pos);
			tmp.remove(0, pos+1);
			
			correct_mass = tmp.toFloat();
		}
	}
	fprintf(stdout, "Atomic Number: %i\n", correct_number);
	fprintf(stdout, "Name: %s\n", (const char*)correct_name);
	fprintf(stdout, "Symbol: %s\n", (const char*)correct_symbol);
	fprintf(stdout, "Atomic Mass: %f\n", correct_mass);
}